---
- name: Create prometheus group
  group: 
    name: "{{prometheusGroupName}}"
    state: present

- name: Create prometheus user
  user:
    name: "{{prometheusUserName}}"
    group: "{{prometheusGroupName}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{prometheusUserName}} nologin User"
    createhome: "no"
    state: present

- name: "Check if prometheus is installed"
  stat:
    path: /etc/systemd/system/prometheus.service
  register: service_file

- name: Download Prometheus release
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheusVersion }}/prometheus-{{ prometheusVersion }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
#  when: not service_file.stat.exists

- name: Copy prometheus file to bin
  copy:
    src: "/tmp/prometheus-{{ prometheusVersion }}.linux-amd64/prometheus"
    dest: "{{prometheusBinDir}}/prometheus"
    owner: "{{prometheusUserName}}"
    group: "{{prometheusGroupName}}"
    remote_src: yes
    mode: 0755
#  when: not service_file.stat.exists

- name: Delete prometheus tmp folder
  file:
    path: '/tmp/prometheus-{{ prometheusVersion }}.linux-amd64'
    state: absent

- name: Create a config directory if it does not exist
  file:
    path: "{{prometheusConfigDir}}"
    state: directory
    owner: root
    group: prometheus
    mode: '0755'

- name: Create DB path
  file:
    path: "{{prometheusDataDir}}"
    state: directory
    owner: prometheus
    group: root
    mode: 0755

- name: Copy prometheus generic config file
  template:
    src: prometheus.conf.j2
    dest: "{{prometheusConfigDir}}/prometheus.conf"
    owner: root
    group: prometheus
  notify: prometheus-reload

- name: Copy systemd init file
  template:
    src: prometheus.service.j2
    dest: "{{prometheusInitFile}}"
  notify: prometheus-restart

- name: Start prometheus service
  systemd:
    name: "{{prometheusServiceName}}"
    state: started
    enabled: yes

